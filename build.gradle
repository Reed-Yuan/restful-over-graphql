plugins {
	id "org.springframework.boot" version "3.0.1"
	id "io.spring.dependency-management" version "1.1.0"
	id "java"
}

group = "fun.reed"
version = "0.0.1-SNAPSHOT"

targetCompatibility = 17
sourceCompatibility = 17

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
	implementation 'systems.manifold:manifold-graphql-rt:2022.1.32'
	testImplementation 'junit:junit:4.13.2'
	annotationProcessor 'systems.manifold:manifold-graphql:2022.1.32'
	testAnnotationProcessor 'systems.manifold:manifold-graphql:2022.1.32'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:7.6.0'
}

// Manifold GraphQL: Configure.
tasks.withType(JavaCompile) {
	options.compilerArgs += ['-Xplugin:Manifold']
}
tasks.compileJava {
	// Add build/resources/main to javac's classpath.
	classpath += files(sourceSets.main.output.resourcesDir)
	dependsOn processResources
}
tasks.compileTestJava {
	// Add build/resources/test to test javac's classpath.
	classpath += files(sourceSets.test.output.resourcesDir)
	dependsOn processTestResources
}

tasks.named("test") {
	useJUnitPlatform()
}
